version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: schedule_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-151213}
      MYSQL_DATABASE: ${DB_NAME:-schedule_notice}
      MYSQL_USER: ${DB_USER:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-151213}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - schedule_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 应用服务
  app:
    build: .
    container_name: schedule_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-151213}
      - DB_NAME=${DB_NAME:-schedule_notice}
      - DB_PORT=3306
      - EMAIL_HOST=${EMAIL_HOST:-smtp.qq.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_SECURE=${EMAIL_SECURE:-false}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - schedule_network
    volumes:
      - ./logs:/app/logs

volumes:
  mysql_data:
    driver: local

networks:
  schedule_network:
    driver: bridge